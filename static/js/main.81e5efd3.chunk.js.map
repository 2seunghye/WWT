{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Feed.js","components/FeedFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","e","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Feed","feedObj","isOwner","editing","setEditing","text","newFeed","setNewFeed","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","FeedFactory","userObj","feed","setFeed","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","feeds","setFeeds","useEffect","onSnapshot","snapshot","feedArray","docs","map","marginTop","Navigation","display","justifyContent","to","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyFeeds","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81e5efd3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fBase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Sign In'} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from '../fBase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Feed = ({ feedObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newFeed, setNewFeed] = useState(feedObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this feed?');\n    console.log(ok);\n    if (ok) {\n      //delete\n      await dbService.doc(`feeds/${feedObj.id}`).delete();\n      await storageService.refFromURL(feedObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(feedObj, newFeed);\n    await dbService.doc(`feeds/${feedObj.id}`).update({\n      text: newFeed,\n    });\n    toggleEditing();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewFeed(value);\n  };\n\n  return (\n    <div className=\"feed\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container feedEdit\">\n            <input type=\"text\" placeholder=\"Edit your feed\" value={newFeed} onChange={onChange} required autoFocus className=\"formInput\" />\n            <input type=\"submit\" value=\"Update Feed\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{feedObj.text}</h4>\n          {feedObj.attachmentUrl && <img src={feedObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"feed\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst FeedFactory = ({ userObj }) => {\n  const [feed, setFeed] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    if (feed === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const feedObj = {\n      text: feed,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('feeds').add(feedObj);\n    setFeed('');\n    setAttachment('');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setFeed(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={feed}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What are you wearing today?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default FeedFactory;\n","import React, { useState, useEffect } from 'react';\nimport { dbService, storageService } from '../fBase';\nimport Feed from 'components/Feed';\nimport FeedFactory from 'components/FeedFactory';\n\nconst Home = ({ userObj }) => {\n  const [feeds, setFeeds] = useState([]);\n  useEffect(() => {\n    dbService.collection('feeds').onSnapshot((snapshot) => {\n      const feedArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setFeeds(feedArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      {' '}\n      <FeedFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {feeds.map((feed) => (\n          <Feed key={feed.id} feedObj={feed} isOwner={feed.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fBase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    // 사진 업로드도 해보기\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyFeeds = async () => {\n    const feeds = await dbService.collection('feeds').where('creatorId', '==', userObj.uid).orderBy('createdAt').get();\n  };\n  useEffect(() => {\n    getMyFeeds();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange} autoFocus className=\"formInput\" />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {/* isLoggedIn이 true 일때만 네비게이션 보임 */}\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fBase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} refreshUser={refreshUser} /> : 'Initializing ...'}\n      <footer>&copy; {new Date().getFullYear()} WWT</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nimport fBase from './fBase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}