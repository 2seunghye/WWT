[{"/Users/seunghye/Desktop/react-project/src/index.js":"1","/Users/seunghye/Desktop/react-project/src/components/App.js":"2","/Users/seunghye/Desktop/react-project/src/components/Router.js":"3","/Users/seunghye/Desktop/react-project/src/routes/Home.js":"4","/Users/seunghye/Desktop/react-project/src/routes/Auth.js":"5","/Users/seunghye/Desktop/react-project/src/fBase.js":"6","/Users/seunghye/Desktop/react-project/src/components/Navigation.js":"7","/Users/seunghye/Desktop/react-project/src/routes/Profile.js":"8","/Users/seunghye/Desktop/react-project/src/components/Feed.js":"9","/Users/seunghye/Desktop/react-project/src/components/AuthForm.js":"10","/Users/seunghye/Desktop/react-project/src/components/FeedFactory.js":"11"},{"size":261,"mtime":1610374681766,"results":"12","hashOfConfig":"13"},{"size":1111,"mtime":1610373007376,"results":"14","hashOfConfig":"13"},{"size":1262,"mtime":1610374663254,"results":"15","hashOfConfig":"13"},{"size":882,"mtime":1610513154003,"results":"16","hashOfConfig":"13"},{"size":1133,"mtime":1610376574044,"results":"17","hashOfConfig":"13"},{"size":658,"mtime":1610354807742,"results":"18","hashOfConfig":"13"},{"size":330,"mtime":1610512435576,"results":"19","hashOfConfig":"13"},{"size":1515,"mtime":1610374870674,"results":"20","hashOfConfig":"13"},{"size":2497,"mtime":1610454479665,"results":"21","hashOfConfig":"13"},{"size":1657,"mtime":1610374138764,"results":"22","hashOfConfig":"13"},{"size":2786,"mtime":1610512665167,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1p8rp5y",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"27"},"/Users/seunghye/Desktop/react-project/src/index.js",["54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nimport fBase from './fBase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["55","56"],"/Users/seunghye/Desktop/react-project/src/components/App.js",[],"/Users/seunghye/Desktop/react-project/src/components/Router.js",["57","58"],"import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {/* isLoggedIn이 true 일때만 네비게이션 보임 */}\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","/Users/seunghye/Desktop/react-project/src/routes/Home.js",["59","60"],"import React, { useState, useEffect } from 'react';\nimport { dbService, storageService } from '../fBase';\nimport Feed from 'components/Feed';\nimport FeedFactory from 'components/FeedFactory';\n\nconst Home = ({ userObj }) => {\n  const [feeds, setFeeds] = useState([]);\n  useEffect(() => {\n    dbService.collection('feeds').onSnapshot((snapshot) => {\n      const feedArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setFeeds(feedArray);\n      console.log(userObj);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <FeedFactory userObj={userObj} />\n      <div className=\"feed__container\" style={{ marginTop: 30 }}>\n        {feeds.map((feed) => (\n          <Feed key={feed.id} feedObj={feed} isOwner={feed.creatorId === userObj.uid} userObj={userObj} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/seunghye/Desktop/react-project/src/routes/Auth.js",["61"],"import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from '../fBase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","/Users/seunghye/Desktop/react-project/src/fBase.js",[],"/Users/seunghye/Desktop/react-project/src/components/Navigation.js",[],"/Users/seunghye/Desktop/react-project/src/routes/Profile.js",["62","63","64"],"import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fBase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    // 사진 업로드도 해보기\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyFeeds = async () => {\n    const feeds = await dbService.collection('feeds').where('creatorId', '==', userObj.uid).orderBy('createdAt').get();\n  };\n  useEffect(() => {\n    getMyFeeds();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange} autoFocus className=\"formInput\" />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","/Users/seunghye/Desktop/react-project/src/components/Feed.js",["65"],"import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Feed = ({ feedObj, isOwner, userObj }) => {\n  const [editing, setEditing] = useState(false);\n  const [newFeed, setNewFeed] = useState(feedObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('이 게시물을 삭제하시겠습니까?');\n    console.log(ok);\n    if (ok) {\n      //delete\n      await dbService.doc(`feeds/${feedObj.id}`).delete();\n      await storageService.refFromURL(feedObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(feedObj, newFeed);\n    await dbService.doc(`feeds/${feedObj.id}`).update({\n      text: newFeed,\n    });\n    toggleEditing();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewFeed(value);\n  };\n\n  return (\n    <div className=\"feed\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container feedEdit\">\n            <input type=\"text\" placeholder=\"Edit your feed\" value={newFeed} onChange={onChange} required autoFocus className=\"formInput\" />\n            <input type=\"submit\" value=\"Update Feed\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          {feedObj.attachmentUrl && <img src={feedObj.attachmentUrl} />}\n          <div className=\"feed__content\">\n            <h4>{feedObj.text}</h4>\n            <div className=\"feed__info\">\n              <span>{new Date().toLocaleDateString().slice(0, -1) + ' ' + new Date().toLocaleTimeString().slice(0, -3)}</span>\n              {/* <span>by {feedObj ? feedObj.creatorId : 'someone'}</span> */}\n              <span>by anonymous</span>\n              {isOwner && (\n                <div className=\"feed__actions\">\n                  <span onClick={toggleEditing}>\n                    <FontAwesomeIcon icon={faPencilAlt} />\n                  </span>\n                  <span onClick={onDeleteClick}>\n                    <FontAwesomeIcon icon={faTrash} />\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n","/Users/seunghye/Desktop/react-project/src/components/AuthForm.js",[],"/Users/seunghye/Desktop/react-project/src/components/FeedFactory.js",["66"],"import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst FeedFactory = ({ userObj }) => {\n  const [feed, setFeed] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    if (feed === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const feedObj = {\n      text: feed,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('feeds').add(feedObj);\n    setFeed('');\n    setAttachment('');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setFeed(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <p>Welcome {userObj ? userObj.displayName : ' '}!</p>\n\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={feed}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What are you wearing today?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default FeedFactory;\n",{"ruleId":"67","severity":1,"message":"68","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":13},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"76","line":2,"column":47,"nodeType":"69","messageId":"70","endLine":2,"endColumn":55},{"ruleId":"67","severity":1,"message":"77","line":2,"column":21,"nodeType":"69","messageId":"70","endLine":2,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":17,"column":6,"nodeType":"80","endLine":17,"endColumn":8,"suggestions":"81"},{"ruleId":"67","severity":1,"message":"82","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":5,"column":1,"nodeType":"85","endLine":56,"endColumn":3},{"ruleId":"67","severity":1,"message":"86","line":33,"column":11,"nodeType":"69","messageId":"70","endLine":33,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":37,"column":6,"nodeType":"80","endLine":37,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":53,"column":37,"nodeType":"91","endLine":53,"endColumn":72},{"ruleId":"89","severity":1,"message":"90","line":89,"column":11,"nodeType":"91","endLine":94,"endColumn":13},"no-unused-vars","'fBase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'storageService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userObj'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'faTwitter' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'feeds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyFeeds'. Either include it or remove the dependency array.",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [userObj]",{"range":"100","text":"101"},"Update the dependencies array to be: [getMyFeeds]",{"range":"102","text":"103"},[524,526],"[userObj]",[951,953],"[getMyFeeds]"]