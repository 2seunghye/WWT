[{"/Users/seunghye/Desktop/react-project/src/index.js":"1","/Users/seunghye/Desktop/react-project/src/components/App.js":"2","/Users/seunghye/Desktop/react-project/src/components/Router.js":"3","/Users/seunghye/Desktop/react-project/src/routes/Home.js":"4","/Users/seunghye/Desktop/react-project/src/routes/Auth.js":"5","/Users/seunghye/Desktop/react-project/src/fBase.js":"6","/Users/seunghye/Desktop/react-project/src/components/Navigation.js":"7","/Users/seunghye/Desktop/react-project/src/routes/Profile.js":"8","/Users/seunghye/Desktop/react-project/src/components/Feed.js":"9","/Users/seunghye/Desktop/react-project/src/components/AuthForm.js":"10","/Users/seunghye/Desktop/react-project/src/components/FeedFactory.js":"11"},{"size":237,"mtime":1610266149443,"results":"12","hashOfConfig":"13"},{"size":1111,"mtime":1610373007376,"results":"14","hashOfConfig":"13"},{"size":1019,"mtime":1610370722855,"results":"15","hashOfConfig":"13"},{"size":759,"mtime":1610373085358,"results":"16","hashOfConfig":"13"},{"size":838,"mtime":1610373091982,"results":"17","hashOfConfig":"13"},{"size":658,"mtime":1610354807742,"results":"18","hashOfConfig":"13"},{"size":321,"mtime":1610359438189,"results":"19","hashOfConfig":"13"},{"size":1265,"mtime":1610370752224,"results":"20","hashOfConfig":"13"},{"size":1663,"mtime":1610357804373,"results":"21","hashOfConfig":"13"},{"size":1473,"mtime":1610373791759,"results":"22","hashOfConfig":"13"},{"size":1840,"mtime":1610373802478,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"v7qv27",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seunghye/Desktop/react-project/src/index.js",["51"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fBase from './fBase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["52","53"],"/Users/seunghye/Desktop/react-project/src/components/App.js",[],"/Users/seunghye/Desktop/react-project/src/components/Router.js",["54","55"],"import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {/* isLoggedIn이 true 일때만 네비게이션 보임 */}\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","/Users/seunghye/Desktop/react-project/src/routes/Home.js",["56"],"/Users/seunghye/Desktop/react-project/src/routes/Auth.js",["57"],"/Users/seunghye/Desktop/react-project/src/fBase.js",[],"/Users/seunghye/Desktop/react-project/src/components/Navigation.js",[],"/Users/seunghye/Desktop/react-project/src/routes/Profile.js",["58","59","60"],"import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fBase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    // 사진 업로드도 해보기\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyFeeds = async () => {\n    const feeds = await dbService.collection('feeds').where('creatorId', '==', userObj.uid).orderBy('createdAt').get();\n  };\n  useEffect(() => {\n    getMyFeeds();\n  }, []);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange} />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n","/Users/seunghye/Desktop/react-project/src/components/Feed.js",["61"],"import React, { useState } from 'react';\nimport { dbService, storageService } from 'fBase';\n\nconst Feed = ({ feedObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newFeed, setNewFeed] = useState(feedObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this feed?');\n    console.log(ok);\n    if (ok) {\n      //delete\n      await dbService.doc(`feeds/${feedObj.id}`).delete();\n      await storageService.refFromURL(feedObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(feedObj, newFeed);\n    await dbService.doc(`feeds/${feedObj.id}`).update({\n      text: newFeed,\n    });\n    toggleEditing();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewFeed(value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input type=\"text\" placeholder=\"Edit your feed\" value={newFeed} onChange={onChange} required />\n            <input type=\"submit\" value=\"Update Feed\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{feedObj.text}</h4>\n          {feedObj.attachmentUrl && <img src={feedObj.attachmentUrl} width=\"150px\" />}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Feed</button>\n              <button onClick={toggleEditing}>Edit Feed</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n","/Users/seunghye/Desktop/react-project/src/components/AuthForm.js",[],"/Users/seunghye/Desktop/react-project/src/components/FeedFactory.js",["62"],{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":13},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"71","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"72","line":2,"column":47,"nodeType":"65","messageId":"66","endLine":2,"endColumn":55},{"ruleId":"63","severity":1,"message":"73","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":35},{"ruleId":"63","severity":1,"message":"71","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":5,"column":1,"nodeType":"76","endLine":47,"endColumn":3},{"ruleId":"63","severity":1,"message":"77","line":33,"column":11,"nodeType":"65","messageId":"66","endLine":33,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":37,"column":6,"nodeType":"80","endLine":37,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":49,"column":37,"nodeType":"84","endLine":49,"endColumn":86},{"ruleId":"82","severity":1,"message":"83","line":60,"column":11,"nodeType":"84","endLine":60,"endColumn":62},"no-unused-vars","'fBase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'storageService' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'feeds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyFeeds'. Either include it or remove the dependency array.","ArrayExpression",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [getMyFeeds]",{"range":"90","text":"91"},[951,953],"[getMyFeeds]"]